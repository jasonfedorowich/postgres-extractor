<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>postgres-cdc-extractor</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <postgresql.version>42.7.4</postgresql.version>
        <lombok.version>1.18.34</lombok.version>
        <junit-jupiter-api.version>5.11.0</junit-jupiter-api.version>
        <mockito-junit-jupiter.version>5.14.2</mockito-junit-jupiter.version>
        <formatter>true</formatter>

        <postgres.host>${docker.host.address}</postgres.host>
        <postgres.port>5432</postgres.port>
        <postgres.user>postgres</postgres.user>
        <postgres.password>postgres</postgres.password>
        <postgres.db.name>postgres</postgres.db.name>
        <postgres.encoding>UTF8</postgres.encoding>
        <postgres.system.lang>en_US.utf8</postgres.system.lang>
        <postgres.image>quay.io/debezium/postgres:15</postgres.image>
        <postgres.config.file>/usr/share/postgresql/postgresql.conf.sample</postgres.config.file>
        <docker.skip>false</docker.skip>
        <docker.showLogs>true</docker.showLogs>
        <docker.initimage>ln -fs /usr/share/zoneinfo/US/Samoa /etc/localtime &amp;&amp; echo timezone=US/Samoa &gt;&gt; ${postgres.config.file}</docker.initimage>
        <docker.dbs>postgres-test-db</docker.dbs>
        <docker.filter>${docker.dbs}</docker.filter>

    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--Test dependencies -->
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter-api.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.16</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>2.0.16</version>
        </dependency>



    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <watchInterval>500</watchInterval>
                    <logDate>default</logDate>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <!-- A Docker image using the Postgres Server with the DBZ decoderbufs plugin -->
                            <name>postgres-test-db</name>
                            <run>
                                <namingStrategy>none</namingStrategy>
                                <env>
                                    <POSTGRES_USER>${postgres.user}</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>${postgres.password}</POSTGRES_PASSWORD>
                                    <POSTGRES_DB>${postgres.db.name}</POSTGRES_DB>
                                    <POSTGRES_INITDB_ARGS>-E ${postgres.encoding}</POSTGRES_INITDB_ARGS>
                                    <LANG>${postgres.system.lang}</LANG>
                                </env>
                                <ports>
                                    <port>5432:5432</port>
                                </ports>
                                <log>
                                    <prefix>postgres</prefix>
                                    <enabled>true</enabled>
                                    <color>yellow</color>
                                </log>
                                <wait>
                                    <time>30000</time> <!-- 30 seconds max -->
                                    <log>(?s)PostgreSQL init process complete.*database system is ready to accept connections</log>
                                </wait>
                            </run>
                            <build>
                                <from>${postgres.image}</from>
                                <runCmds>
                                    <run>${docker.initimage}</run>
                                </runCmds>
                            </build>
                            <external>
                                <type>properties</type>
                                <mode>override</mode>
                            </external>
                        </image>

                    </images>
                </configuration>
                <!--
                Connect this plugin to the maven lifecycle around the integration-test phase:
                start the container in pre-integration-test and stop it in post-integration-test.
                -->
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>18</source>
                    <target>18</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>net.revelc.code.formatter</groupId>-->
<!--                <artifactId>formatter-maven-plugin</artifactId>-->
<!--                <version>2.11.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>validate</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>false</skipTests>
                    <enableAssertions>true</enableAssertions>
                    <systemPropertyVariables>
                        <!-- Make these available to the tests via system properties -->
                        <database.hostname>${postgres.host}</database.hostname>
                        <database.port>${postgres.port}</database.port>
                        <database.user>${postgres.user}</database.user>
                        <database.password>${postgres.password}</database.password>
                        <database.dbname>${postgres.db.name}</database.dbname>
                        <plugin.name>${decoder.plugin.name}</plugin.name>
                        <skipLongRunningTests>false</skipLongRunningTests>
                    </systemPropertyVariables>
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>